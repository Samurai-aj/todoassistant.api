name: Go pipeline
on: 
  push: 
     branches: [ "main" ]
  pull_request: 
     branches: [ "main", "staging" ]
jobs: 
    Build:
        runs-on: ubuntu-latest
        steps: 
          - name: checkout repository code 
            uses: actions/checkout@v2
          - name: docker login
            env: 
                 DOCKER_USER: ${{ secrets.DOCKER_USER }}
                 DOCKER_PASS : ${{ secrets.DOCKER_PASS }}
            run: |
                 docker login -u $DOCKER_USER -p $DOCKER_PASS

          - name: setup Go
            uses: actions/setup-go@v2
            with:
            
                  go-version: 1.19
          
          - name: Run linting
            run: |
              go fmt ./...
              #go vet ./...
           
#           - name: docker build
#             run: |
#                 docker build ./<directory> -t ochetobo/todo-ochetobo/todo

#           - name: docker push
#             run: |
#                 docker push ochetobo/todo

#     Deploy-staging: 
#           runs-on: ubuntu-latest
#           needs: Tests
#           if: success() && github.ref == 'refs/heads/staging' 
#           steps:

#             - name: deploy to staging server
#               uses: appleboy/ssh-action@master
#               with: 
#                 host: ${{ secrets.HOST }}
#                 username: ${{ secrets.USERNAME }}
#                 password: ${{ secrets.Password }}
#                 port: ${{ secrets.PORT }}
#                 script: |
#                     sudo docker-compose down --rmi pull
#                     sudo docker-compose up 
                  

#     Deploy-prod: 
#             runs-on: ubuntu-latest
#             needs: ["Tests", ["Deploy-staging"]]
#             if: success() && github.ref == 'refs/heads/main' 
#             steps:

#                - name: deploy to staging server
#                  uses: appleboy/ssh-action@master
#                  with: 
#                    host: ${{ secrets.HOST }}
#                    username: ${{ secrets.USERNAME }}
#                    password: ${{ secrets.Password }}
#                    port: ${{ secrets.PORT }}
#                    script: |
#                       sudo docker-compose down --rmi pull
#                       sudo docker-compose up 
                  



